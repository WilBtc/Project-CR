{
    "compilerOptions": {
      /* Basic Options */
      "target": "es5",                                  // Specify ECMAScript target version
      "module": "esnext",                               // Specify module code generation
      "lib": ["dom", "dom.iterable", "esnext"],         // Specify library files to be included in the compilation
      "allowJs": true,                                  // Allow JavaScript files to be compiled
      "skipLibCheck": true,                             // Skip type checking of all declaration files (*.d.ts)
      "esModuleInterop": true,                          // Enables emit interoperability between CommonJS and ES Modules
      "allowSyntheticDefaultImports": true,             // Allow default imports from modules with no default export
      "strict": true,                                   // Enable all strict type-checking options
      "forceConsistentCasingInFileNames": true,         // Disallow inconsistently-cased references to the same file
      "moduleResolution": "node",                       // Resolve modules using Node.js style
      "resolveJsonModule": true,                        // Include modules imported with .json extension
      "isolatedModules": true,                          // Ensure that each file can be safely transpiled without relying on other imports
      "noEmit": true,                                   // Do not emit outputs (no output files will be created)
  
      /* Additional Checks */
      "strictNullChecks": true,                         // Enable strict null checks
      "strictFunctionTypes": true,                      // Ensure functions parameters are correctly typed
      "strictBindCallApply": true,                      // Enable strict 'bind', 'call', and 'apply' methods on functions
      "strictPropertyInitialization": true,             // Ensure non-undefined class properties are initialized in the constructor
  
      /* Advanced Options */
      "baseUrl": "./",                                  // Base directory to resolve non-relative module names
      "paths": {                                        // Set up path mapping
        "*": ["src/*"]
      },
      "jsx": "react-jsx"                                // Support JSX in .tsx files: "preserve", "react-native", or "react-jsx"
    },
    "include": [
      "src/**/*"                                        // Include all files in the src directory
    ],
    "exclude": [
      "node_modules",                                   // Exclude the node_modules directory
      "**/*.spec.ts"                                    // Exclude test files
    ]
  }
  